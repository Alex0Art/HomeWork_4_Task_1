#include <iostream>
#include <array> //библиотека с массивами
#include <cstdlib> //стандартная либа для С
#include <ctime> // для времени на С (узнать текущее время)

//Task_1 - Написать программу, которая находит в двумерном массиве значения, 
//повторяющиеся два и более раз, и показывает их на экран.

int main()
{
	setlocale(LC_ALL, "Russian");

	//Создаем локальную переменную (действует только в пределах "main») - размер массива 
	const int sizeArray = 3;
	//Создаем массив [размер массива]
	int array1[sizeArray][sizeArray];
	//Создаем переменную с помощью которой будем искать дубликаты
	int dublikat = 0;
	//Если в массиве не будет дубликатов, то на этот случай создаем дополнительную переменную
	bool dublikatov_net = false;

	//Заполнение массива случайными числами 
	//Вызываем функцию "srand"
	srand(time(NULL));

	//Заполняем массив случайными числами с помощь цикла "for"
	//Обращение к "строкам" массива
	std::cout << "Массив " << std::endl;
	for (int i = 0; i < sizeArray; i++)
	{
		//Обращение к "столбцам" (заполняем строки) массива
		for (int j = 0; j < sizeArray; j++)
		{
			//Ограничиваем случайные числа ДО 10 (где 10 не входит)
			array1[i][j] = rand() % 10;
			//Выводим числа в консоль
			std::cout << array1[i][j] << " ";
			//* т.к. массив это глобальная переменная то мы можем с ним работать дальше
		}
		//Переходим на следующую строку
		//Чтобы массив был похож на матрицу
		std::cout << std::endl;
	}
	//Разделяем строчкой для лучшей читаемости
	std::cout << std::endl;

	//Ищем дубликаты в массиве
	//Используем цикл "for" который "пробежится" по всему массиву

	//Этот цикл нужен чтобы сравнить каждое число с последующим
	for (int i = 0; i < sizeArray; i++)
	{
		for (int j = 0; j < sizeArray; j++)
		{
			//Присваиваем переменной первое значение в массиве
			//Сравниваем первое значение со следующим
			//* т.к. массив — это глобальная переменная то мы можем с ним работать сейчас
			//* обратимся к первому числу в массиве
			dublikat = array1[i][j];
			//Сразу проверяем наличие дубликатов по столбцу
			//* Те числа, что под ним
			if (dublikat == array1[i + 1][j])
			{
				std::cout << "дубликат: " << dublikat << " " << std::endl;
				//Если дубликат найдется, то меняем тип переменной
				dublikatov_net = true;
			}
			//Если идет проверка дубликата последнего числа в строке
			//* то сверяем его с первым числом на следующей строке
			if (dublikat == array1[i][j + 1])
			{
				std::cout << "дубликат: " << dublikat << " " << std::endl;
				//Если дубликат найдется, то меняем тип переменной
				dublikatov_net = true;
			}

			//Открываем ещё один цикл "for"
			//Этот цикл нужен чтобы сравнить текущее значение со следующим
			//Проверка по строкам

			//Перебор строк
			for (int ii = i; ii < sizeArray; ii++)
			{
				//Перебор столбцов (но движемся по строке)
				for (int jj = j + 1; jj < sizeArray; jj++)
				{
					//Сравниваем текущее значение со следующим + 1 (чтобы не сравнивать его
					//с самим собой)
					if (dublikat == array1[ii][jj])
					{
						std::cout << "дубликат: " << dublikat << " " << std::endl;
						//Если дубликат найдется, то меняем тип переменной
						dublikatov_net = true;
					}
					//Если число дубликат будет располагаться по диагонали то
					if (dublikat == array1[ii - 1][jj])
					{
						std::cout << "дубликат: " << dublikat << " " << std::endl;
						//Если дубликат найдется, то меняем тип переменной
						dublikatov_net = true;
					}
				}
			}
		}
	}
	//Если дубликатов в массиве не было найдено, то так и пишем в консоль
	if (dublikatov_net == false)
	{
		std::cout << "Дубликатов нету " << std::endl;
	}

	return 0;
}